# Makefile for SSC compiler using Flex and Bison

# Compiler
CXX = clang++

# Files
LEXER = ssc.l
PARSER = ssc.y
EXECUTABLE = ssc_compiler
TEST_FILE = input.ssc

# Intermediate files generated by Flex and Bison
LEX_C = lex.yy.c
PARSER_C = ssc.tab.c
PARSER_H = ssc.tab.h

# Bison and Flex flags
BISON_FLAGS = -d
FLEX_FLAGS =

# Default target: compile the entire project
all: $(EXECUTABLE)

# Generate the parser using Bison
$(PARSER_C) $(PARSER_H): $(PARSER)
	bison $(BISON_FLAGS) $(PARSER)

# Generate the lexer using Flex
$(LEX_C): $(LEXER)
	flex $(FLEX_FLAGS) $(LEXER)

# Compile the SSC compiler
$(EXECUTABLE): $(LEX_C) $(PARSER_C)
	$(CXX) -o $(EXECUTABLE) $(PARSER_C) $(LEX_C)

# Run the SSC compiler with the sample input file
run: $(EXECUTABLE)
	./$(EXECUTABLE) $(TEST_FILE)

# Clean up generated files
clean:
	rm -f $(LEX_C) $(PARSER_C) $(PARSER_H) $(EXECUTABLE)

# Clean all generated files and any additional outputs
distclean: clean
	rm -f a.out ssc.output

# Show available Makefile commands
help:
	@echo "Available targets:"
	@echo "  make        - Compile the SSC compiler"
	@echo "  make run    - Run the SSC compiler with the test file"
	@echo "  make clean  - Remove compiled and intermediate files"
	@echo "  make distclean - Remove all build files and output"
	@echo "  make help   - Display this help message"

# Phony targets
.PHONY: all run clean distclean help

